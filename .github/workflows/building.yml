name: Build Release Assets

on:
  release:
    types:
      - created

jobs:
  linux:
    name: build for Linux
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: |
          npm install
      - name: build for Linux
        run: |
          npm run build -- --platform=linux
          cd dist
          tar zcvf electronic-plex-linux-x64.tar.gz electronic-plex-linux-x64
      - name: get release file name and upload URL
        id: get_release_info
        run: |
          echo ::set-output name=file_name::${REPOSITORY_NAME##*/}-${TAG_REF_NAME##*/v} # RepositoryName-v1.0.0
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
        env:
          TAG_REF_NAME: ${{ github.ref }}
          REPOSITORY_NAME: ${{ github.repository }}
      - name: upload Linux release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/electronic-plex-linux-x64.tar.gz
          asset_name: electronic-plex-linux-x64.tar.gz
          asset_content_type: application/gzip

  windows:
    runs-on: 'windows-latest'
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: |
          npm install
      - name: build for Windows
        run: |
          npm run build -- --platform=win32
          cd dist
          zip -r electronic-plex-win32-x64.zip electronic-plex-win32-x64
      - name: upload Windows release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/electronic-plex-win32-x64.zip
          asset_name: electronic-plex-win32-x64.zip
          asset_content_type: application/zip

  macos:
    runs-on: 'macos-latest'
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: |
          npm install
      - name: build for macOS
        run: |
          npm run build -- --platform=darwin
          cd dist
          zip -r electronic-plex-darwin-x64.zip electronic-plex-darwin-x64
      - name: upload OSX release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/electronic-plex-darwin-x64.zip
          asset_name: electronic-plex-darwin-x64.zip
          asset_content_type: application/zip
